spring:
#  config:
#    import: optional:file:.env[.properties]
  datasource:
    url: jdbc:h2:tcp://localhost/~/test
    username: sa
    password:
    driver-class-name: org.h2.Driver

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true

  # security:
  #   user:
  #     name: user
  #     password: 1234
  data:
    mongodb:
      uri: mongodb+srv://whai:RAf!eWr-bAmf!L5@cluster0.cefghb6.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
      database: chat_app

#        dialect: org.hibernate.dialect.H2Dialect
#        show_sql: true

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: 86a8d081a1751bfd62c3c49e7d2c3f72
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - profile_image
              - account_email
            client-name: kakao
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id # 유저 정보 조회 시 반환되는 최상위 필드명으로 해야 한다.

logging.level:
  org.hibernate.SQL: debug
server:
  port: 8080
logging:
  level:
    org:
      springframework:
        security: DEBUG
jwt:
  secret: lVUiTGbxj4xgW5orFkfdNP72414P5q7ysgJi0rBSY9LwIWkjMY9VrxXV6BdF3bR+wpUgx/vQniz5lqNPbPwRPA==

  expiration: 86400000  # 1 day in milliseconds